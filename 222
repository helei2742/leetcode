package cn.com.helei.bot.app.depin_3_dos;

import cn.com.helei.bot.core.dto.Result;
import cn.com.helei.bot.core.entity.AccountContext;
import cn.com.helei.bot.core.util.exception.RegisterException;
import cn.hutool.core.util.BooleanUtil;
import com.alibaba.fastjson.JSONObject;
import io.netty.handler.codec.http.HttpMethod;
import lombok.extern.slf4j.Slf4j;

import java.util.List;
import java.util.Map;

@Slf4j
public class ThreeDosApi {

    private static final String REGISTER_API = "https://api.dashboard.3dos.io/api/auth/register";

    private final ThreeDosBot bot;

    public ThreeDosApi(ThreeDosBot bot) {
        this.bot = bot;
    }

    public Result register(AccountContext exampleAC, List<AccountContext> sameABIIdList, String inviteCode) {

        JSONObject body = new JSONObject();
        body.put("acceptTerms", true);
        body.put("referred_by", inviteCode);
        body.put("email", exampleAC.getAccountBaseInfo().getEmail());
        body.put("password", exampleAC.getAccountBaseInfo().getPassword());

        Map<String, String> headers = exampleAC.getBrowserEnv().generateHeaders();
        headers.put("Origin", "https://dashboard.3dos.io");
        headers.put("Referer", "https://dashboard.3dos.io/");


        bot.syncRequest(
                exampleAC.getProxy(),
                REGISTER_API,
                HttpMethod.POST,
                headers,
                null,
                body
        ).thenAcceptAsync(responseStr->{
            JSONObject result = JSONObject.parseObject(responseStr);

            if (BooleanUtil.isTrue(result.getBoolean("flag"))) {
                log.info("注册成功");
            } else {

                throw new RegisterException("注册失败, " + responseStr);
            }
        }, bot.getExecutorService()).thenRunAsync(()->{
            
        }, bot.getExecutorService());
    }
}
package cn.com.helei.bot.app.depin_3_dos;

import cn.com.helei.bot.core.bot.anno.BotMethod;
import cn.com.helei.bot.core.bot.base.AnnoDriveAutoBot;
import cn.com.helei.bot.core.bot.constants.BotJobType;
import cn.com.helei.bot.core.dto.Result;
import cn.com.helei.bot.core.dto.config.AutoBotConfig;
import cn.com.helei.bot.core.entity.AccountContext;
import cn.com.helei.bot.core.supporter.botapi.BotApi;

import java.util.List;

public class ThreeDosBot extends AnnoDriveAutoBot<ThreeDosBot> {

    private final ThreeDosApi threeDosApi;

    public ThreeDosBot(AutoBotConfig autoBotConfig, BotApi botApi) {
        super(autoBotConfig, botApi);
        this.threeDosApi = new ThreeDosApi(this);
    }

    @BotMethod(jobType = BotJobType.REGISTER)
    public Result autoRegister(AccountContext exampleAC, List<AccountContext> sameABIIdList, String inviteCode) {
        return threeDosApi.register(exampleAC,sameABIIdList, inviteCode);
    }


    @Override
    protected ThreeDosBot getInstance() {
        return null;
    }
}
