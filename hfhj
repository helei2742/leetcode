以下是 Solana JSON-RPC HTTP API 的常见请求和响应示例，包括账户信息、交易详情和区块信息等场景。

1. 获取账户信息 (getAccountInfo)

请求：

{
  "jsonrpc": "2.0",
  "id": 1,
  "method": "getAccountInfo",
  "params": [
    "账户地址",
    {
      "encoding": "jsonParsed",
      "commitment": "finalized"
    }
  ]
}

响应：

{
  "jsonrpc": "2.0",
  "id": 1,
  "result": {
    "context": {
      "slot": 12345678
    },
    "value": {
      "data": [],  // 账户数据
      "executable": false,
      "lamports": 1000000000, // 余额 (单位: lamports)
      "owner": "11111111111111111111111111111111",
      "rentEpoch": 123
    }
  }
}

2. 获取交易详情 (getTransaction)

请求：

{
  "jsonrpc": "2.0",
  "id": 2,
  "method": "getTransaction",
  "params": [
    "交易签名",
    {
      "encoding": "jsonParsed"
    }
  ]
}

响应：

{
  "jsonrpc": "2.0",
  "id": 2,
  "result": {
    "slot": 12345678,
    "transaction": {
      "signatures": ["签名"],
      "message": {
        "accountKeys": [
          "账户1地址",
          "账户2地址"
        ],
        "instructions": [
          {
            "programId": "TokenProgram1111111111111111111111111",
            "data": "指令数据",
            "accounts": ["账户1地址", "账户2地址"]
          }
        ],
        "recentBlockhash": "区块哈希"
      }
    },
    "meta": {
      "err": null,
      "fee": 5000,
      "preBalances": [1000000000, 2000000000],
      "postBalances": [999995000, 2000000000],
      "preTokenBalances": [],
      "postTokenBalances": []
    }
  }
}

3. 获取最新区块 (getLatestBlockhash)

请求：

{
  "jsonrpc": "2.0",
  "id": 3,
  "method": "getLatestBlockhash",
  "params": [
    {
      "commitment": "finalized"
    }
  ]
}

响应：

{
  "jsonrpc": "2.0",
  "id": 3,
  "result": {
    "context": {
      "slot": 12345678
    },
    "value": {
      "blockhash": "区块哈希",
      "lastValidBlockHeight": 12346000
    }
  }
}

4. 获取区块信息 (getBlock)

请求：

{
  "jsonrpc": "2.0",
  "id": 4,
  "method": "getBlock",
  "params": [
    12345678, // Slot ID
    {
      "encoding": "jsonParsed",
      "transactionDetails": "full",
      "rewards": true
    }
  ]
}

响应：

{
  "jsonrpc": "2.0",
  "id": 4,
  "result": {
    "blockhash": "区块哈希",
    "parentSlot": 12345677,
    "transactions": [
      {
        "transaction": {
          "signatures": ["签名"],
          "message": {
            "accountKeys": ["账户地址1", "账户地址2"],
            "instructions": [
              {
                "programId": "TokenProgram1111111111111111111111111",
                "data": "指令数据",
                "accounts": ["账户地址1", "账户地址2"]
              }
            ],
            "recentBlockhash": "区块哈希"
          }
        },
        "meta": {
          "err": null,
          "fee": 5000,
          "preBalances": [1000000000, 2000000000],
          "postBalances": [999995000, 2000000000]
        }
      }
    ],
    "rewards": []
  }
}

5. 获取多个账户的信息 (getMultipleAccounts)

请求：

{
  "jsonrpc": "2.0",
  "id": 5,
  "method": "getMultipleAccounts",
  "params": [
    ["账户地址1", "账户地址2"],
    {
      "encoding": "jsonParsed",
      "commitment": "finalized"
    }
  ]
}

响应：

{
  "jsonrpc": "2.0",
  "id": 5,
  "result": {
    "context": {
      "slot": 12345678
    },
    "value": [
      {
        "data": [],
        "lamports": 1000000000,
        "owner": "11111111111111111111111111111111",
        "executable": false,
        "rentEpoch": 345
      },
      {
        "data": [],
        "lamports": 2000000000,
        "owner": "11111111111111111111111111111111",
        "executable": false,
        "rentEpoch": 345
      }
    ]
  }
}

6. 获取区块链健康状态 (getHealth)

请求：

{
  "jsonrpc": "2.0",
  "id": 6,
  "method": "getHealth"
}

响应：

{
  "jsonrpc": "2.0",
  "id": 6,
  "result": "ok" // 表示网络健康
}

7. 发送交易 (sendTransaction)

请求：

{
  "jsonrpc": "2.0",
  "id": 7,
  "method": "sendTransaction",
  "params": [
    "签名后的交易数据(Base64编码)",
    {
      "encoding": "base64",
      "commitment": "confirmed"
    }
  ]
}

响应：

{
  "jsonrpc": "2.0",
  "id": 7,
  "result": "交易签名"
}

8. 模拟交易 (simulateTransaction)

请求：

{
  "jsonrpc": "2.0",
  "id": 8,
  "method": "simulateTransaction",
  "params": [
    "签名后的交易数据(Base64编码)",
    {
      "encoding": "base64",
      "commitment": "processed"
    }
  ]
}

响应：

{
  "jsonrpc": "2.0",
  "id": 8,
  "result": {
    "context": {
      "slot": 12345678
    },
    "value": {
      "err": null,
      "logs": [
        "Program xxx invoked by...",
        "Transfer 10 SOL from ... to ..."
      ]
    }
  }
}

小结

这些 API 是 Solana 常用的 JSON-RPC 接口，每个请求都包含：
	•	jsonrpc：JSON-RPC 协议版本，始终为 "2.0"。
	•	id：客户端自定义的请求 ID，用于标识请求和响应的对应关系。
	•	method：请求的方法名称。
	•	params：方法的参数，数组或对象。

响应中包含相同的 id 字段，用于标识请求和响应的关联关系。如果有具体业务场景需求，可以进一步优化请求设计。
