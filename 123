import request from '@/util/request.ts'
import type {RegisteredScriptNode} from "@/types/vortexa-type.ts";
import type {Result} from "@/types/vortexa-type-common.ts";

/**
 * 查询所有已注册的script node
 * @returns {*}
 */
export function queryAllRegisteredScriptNode(): Promise<Result<Array<RegisteredScriptNode>>> {
  return request({
    url: '/scriptNode/all',
    method: 'post'
  })
}
<script setup lang="ts">
import {MoreFilled} from "@element-plus/icons-vue"
import ContentBlock from "@/components/content-block/content-block.vue";
import {queryAllRegisteredScriptNode} from "@/api/script-node.ts";
import {onMounted, ref} from "vue";
import type {RegisteredScriptNode} from "@/types/vortexa-type.ts";

const scriptNodeList = ref()

const scriptNodeStatus = ({row, rowIndex}) => {
  if (row.online) {
    return 'script-node-online'
  } else {
    return 'script-node-offline'
  }
}

const ipTagName = (registeredScriptNode:RegisteredScriptNode) => {
  if (registeredScriptNode.online) {
    return 'success'
  } else {
    return 'info'
  }
}

// 查询全部
const queryAllRegisteredScriptNodeNetwork = () => {
  queryAllRegisteredScriptNode().then(result => {
    console.log(result)
    scriptNodeList.value = result.data
  })
}

onMounted(async () => {
  queryAllRegisteredScriptNodeNetwork()
})
</script>

<template>
  <content-block class="vortexa-script-node-view">
    <div class="script-node-list">
      <el-table
        class="script-node-table"
        :data="scriptNodeList"
        :row-class-name="scriptNodeStatus"
        table-layout="fixed"
        height="500"
        fit
      >
        <el-table-column label="nodeName" sortable min-width="160">
          <template #default="scope">
            <el-text :line-clamp="1">
              {{ scope.row.scriptNode.scriptNodeName }}
            </el-text>
          </template>
        </el-table-column>
        <el-table-column label="groupId" sortable min-width="160">
          <template #default="scope">
            <el-text :line-clamp="1" :runcated="true">
              {{ scope.row.scriptNode.groupId }}
            </el-text>
          </template>
        </el-table-column>
        <el-table-column prop="serviceId" sortable label="ServiceId" min-width="160">
          <template #default="scope">
            <el-text :line-clamp="1" :runcated="true">
              {{ scope.row.scriptNode.serviceId }}
            </el-text>
          </template>
        </el-table-column>
        <el-table-column prop="instanceId" sortable label="InstanceId" min-width="160">
          <template #default="scope">
            <el-text :line-clamp="1" :runcated="true">
              {{ scope.row.scriptNode.instanceId }}
            </el-text>
          </template>
        </el-table-column>
        <el-table-column label="ip" sortable min-width="160">
          <template #default="scope">
            <el-tag :type="ipTagName(scope.row)">
              {{ scope.row.scriptNode.host + ':' + scope.row.scriptNode.port }}
            </el-tag>
          </template>
        </el-table-column>

        <el-table-column fixed="right" width="85">
          <template #default>
            <el-dropdown placement="bottom-end">
              <el-button text type="info" size="large" style="font-size: 22px">
                <el-icon><MoreFilled /></el-icon>
              </el-button>
              <template #dropdown>
                <el-dropdown-menu>
                  <el-dropdown-item>The Action 1st</el-dropdown-item>
                  <el-dropdown-item>The Action 2st</el-dropdown-item>
                  <el-dropdown-item>The Action 3st</el-dropdown-item>
                </el-dropdown-menu>
              </template>
            </el-dropdown>
          </template>
        </el-table-column>
      </el-table>
    </div>
  </content-block>
</template>

<style scoped>

.vortexa-script-node-view {
  height: calc(100vh - 240px);
}

.script-node-list {
  position: relative;

}

.script-node-table {
  position: absolute;
}

:deep(.el-table .script-node-online)  {
  --el-table-tr-bg-color:var(--el-color-success-light-9);
}

:deep(.el-table .script-node-offline) {
  --el-table-tr-bg-color: var(--el-color-info-light-7);
}
</style>
