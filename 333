CREATE TABLE binance_contract_order (
    order_id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '订单编号',
    symbol VARCHAR(20) NOT NULL COMMENT '交易对，例如 BTCUSDT',
    side ENUM('BUY', 'SELL') NOT NULL COMMENT '交易方向',
    position_side ENUM('BOTH', 'LONG', 'SHORT') DEFAULT 'BOTH' COMMENT '持仓方向，默认BOTH',
    type ENUM('LIMIT', 'MARKET', 'STOP', 'STOP_MARKET', 'TAKE_PROFIT', 'TAKE_PROFIT_MARKET', 'TRAILING_STOP_MARKET') NOT NULL COMMENT '订单类型',
    quantity DECIMAL(18, 8) NOT NULL COMMENT '交易数量',
    price DECIMAL(18, 8) DEFAULT NULL COMMENT '订单价格，仅限限价单',
    stop_price DECIMAL(18, 8) DEFAULT NULL COMMENT '触发价，仅限触发单',
    reduce_only BOOLEAN DEFAULT FALSE COMMENT '是否仅减少持仓，仅适用于双向持仓模式',
    close_position BOOLEAN DEFAULT FALSE COMMENT '是否为全平仓单，仅适用于触发单',
    time_in_force ENUM('GTC', 'IOC', 'FOK') DEFAULT 'GTC' COMMENT '订单有效期类型',
    working_type ENUM('MARK_PRICE', 'CONTRACT_PRICE') DEFAULT 'CONTRACT_PRICE' COMMENT '触发价格类型',
    price_protect BOOLEAN DEFAULT FALSE COMMENT '价格保护开关',
    client_order_id VARCHAR(36) DEFAULT NULL COMMENT '用户自定义订单ID',
    timestamp BIGINT NOT NULL COMMENT '请求时间戳',
    status ENUM('NEW', 'PARTIALLY_FILLED', 'FILLED', 'CANCELED', 'REJECTED', 'EXPIRED') DEFAULT 'NEW' COMMENT '订单状态',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '订单创建时间',
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '订单更新时间'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='币安合约交易订单表';


insert overwrite table ipd_ops_dwr_pub.dwr_pub_yygzt_v2_td_order_full
select	 busi_no
        ,title
        ,issue_desc
        ,case
			when status = '0' then '起草中'
			when status = '1' then '待确认'
			when status = '2' then '处理中'
			when status = '3' then '待验证'
			when status = '4' then '已关闭'
			when status = '11' then '分析中'
			when status = '12' then '拒绝待确认'
			when status = '20' then '已拒绝'
			when status = '30' then '已取消'
		end as status
		,case
			when td_type = 1 then '工程能力类'
			when td_type = 2 then '数据类'
			when td_type = 3 then '流程类'
			when td_type = 4 then '业务部门类' else '其他'
		end as order_type
		,biz_domain as issue_domain
        ,nvl(user_by,'--') as  user_by
        ,l1_dept_code
        ,l1_dept_cn_name
        ,l2_dept_code
        ,l2_dept_cn_name
        ,l3_dept_code
        ,l3_dept_cn_name
        ,l4_dept_code
        ,l4_dept_cn_name
        ,l5_dept_code
        ,l5_dept_cn_name
        ,l6_dept_code
        ,l6_dept_cn_name
		,product_code
        ,product_name
        ,spdt_code
        ,spdt_name
        ,pdt_code
        ,pdt_name
        ,sub_product_code
        ,sub_product_name
        ,module_code
        ,module_cn_name
        ,app_id
        ,app_cn_name
		,created_by
        ,curr_process_user
        ,opened_user
        ,open_time
		,deal_time
        ,sla_upgrade_cnt
        ,sla_break_flag
        ,respond_sla_status
		,closed_sla_status
		,saty_time
		,relate_order_no
		,sla_warn
		,sla_time
		,sla_status
		,to_do_person
		,to_do_applicant
		,trace_person
		,trace_upgrade
		,case
			when to_do_person is not null   then '未处理'
			else '其他'
		end as label_priority_01
		,case
			when (trace_person is not null or trace_upgrade is not null) and sla_upgrade_cnt = 3 then '三次升级'
			when (trace_person is not null or trace_upgrade is not null) and sla_upgrade_cnt = 2 then '二次升级'
			when (trace_person is not null or trace_upgrade is not null) and sla_upgrade_cnt = 1 then '一次升级'
			when (trace_person is not null or trace_upgrade is not null) and sla_upgrade_cnt = 0 and sla_status  - 1 >=0 then '即将打破SLA'
			when (trace_person is not null or trace_upgrade is not null) and user_by = trace_upgrade then '待其它环节处理'
			when trace_person is not null or trace_upgrade is not null then   '其他'
		end as label_priority_02
		,operate_datetime as status_start_time
		,round((unix_timestamp() - unix_timestamp(operate_datetime))/(24*60*60),2) as status_stay_duration
		,case
			when related_service_order regexp 'SD' then relate_user  else created_by
		end as team_dept_user
		,cast(current_timestamp as string) as ops_insert_time
	from temp2
	where parent_rn = 1
	and sub_rn = 1;
