Solana JSON RPC 提供了多个 WebSocket 方法，用于订阅和监听链上事件。以下是所有可用的 WebSocket method 名称、解释和示例 JSON 请求。

1. logsSubscribe

订阅与指定账户相关的日志消息，包含合约调用、转账等信息。

参数说明：

	•	mentions：要监控的账户地址数组。

示例请求：

{
  "jsonrpc": "2.0",
  "id": 1,
  "method": "logsSubscribe",
  "params": [
    {
      "mentions": ["账户地址"]
    },
    {
      "encoding": "jsonParsed"
    }
  ]
}

示例响应：

{
  "jsonrpc": "2.0",
  "result": {
    "subscription": 1 // 订阅 ID
  }
}

推送示例：

{
  "jsonrpc": "2.0",
  "method": "logsNotification",
  "params": {
    "subscription": 1,
    "result": {
      "context": {
        "slot": 12345678
      },
      "value": {
        "signature": "交易签名",
        "logMessages": [
          "Program xxx invoked by...",
          "Transfer 10 SOL from ... to ..."
        ]
      }
    }
  }
}

2. accountSubscribe

订阅某个账户的状态变化，包括余额或数据更新。

参数说明：

	•	account：需要订阅的账户地址。
	•	commitment：数据确认等级（processed、confirmed、finalized）。

示例请求：

{
  "jsonrpc": "2.0",
  "id": 1,
  "method": "accountSubscribe",
  "params": [
    "账户地址",
    {
      "encoding": "jsonParsed",
      "commitment": "finalized"
    }
  ]
}

示例响应：

{
  "jsonrpc": "2.0",
  "result": {
    "subscription": 2
  }
}

推送示例：

{
  "jsonrpc": "2.0",
  "method": "accountNotification",
  "params": {
    "subscription": 2,
    "result": {
      "context": {
        "slot": 12345678
      },
      "value": {
        "lamports": 1000000000, // 账户余额
        "owner": "TokenProgram1111111111111111111111111",
        "data": [], // 账户数据
        "executable": false,
        "rentEpoch": 345
      }
    }
  }
}

3. programSubscribe

订阅某个程序（智能合约）相关的账户变化。例如，监控某个代币合约的所有账户。

参数说明：

	•	programId：程序 ID（合约地址）。
	•	commitment：数据确认等级（processed、confirmed、finalized）。

示例请求：

{
  "jsonrpc": "2.0",
  "id": 1,
  "method": "programSubscribe",
  "params": [
    "程序ID",
    {
      "encoding": "base64",
      "commitment": "finalized"
    }
  ]
}

示例响应：

{
  "jsonrpc": "2.0",
  "result": {
    "subscription": 3
  }
}

推送示例：

{
  "jsonrpc": "2.0",
  "method": "programNotification",
  "params": {
    "subscription": 3,
    "result": {
      "context": {
        "slot": 12345678
      },
      "value": {
        "pubkey": "账户地址",
        "account": {
          "lamports": 2000000,
          "owner": "TokenProgram1111111111111111111111111",
          "data": [],
          "executable": false,
          "rentEpoch": 345
        }
      }
    }
  }
}

4. slotSubscribe

订阅新区块槽位的变化事件。

示例请求：

{
  "jsonrpc": "2.0",
  "id": 1,
  "method": "slotSubscribe"
}

示例响应：

{
  "jsonrpc": "2.0",
  "result": {
    "subscription": 4
  }
}

推送示例：

{
  "jsonrpc": "2.0",
  "method": "slotNotification",
  "params": {
    "subscription": 4,
    "result": {
      "parent": 12345677,
      "slot": 12345678,
      "root": 12345676
    }
  }
}

5. slotsUpdatesSubscribe

订阅区块插槽的更新事件，包括未确认、确认和根槽位更新。

示例请求：

{
  "jsonrpc": "2.0",
  "id": 1,
  "method": "slotsUpdatesSubscribe"
}

示例响应：

{
  "jsonrpc": "2.0",
  "result": {
    "subscription": 5
  }
}

推送示例：

{
  "jsonrpc": "2.0",
  "method": "slotsUpdatesNotification",
  "params": {
    "subscription": 5,
    "result": {
      "type": "confirmed",
      "slot": 12345678,
      "timestamp": 1639876543
    }
  }
}

6. voteSubscribe

订阅验证者投票的变化事件。

示例请求：

{
  "jsonrpc": "2.0",
  "id": 1,
  "method": "voteSubscribe"
}

示例响应：

{
  "jsonrpc": "2.0",
  "result": {
    "subscription": 6
  }
}

推送示例：

{
  "jsonrpc": "2.0",
  "method": "voteNotification",
  "params": {
    "subscription": 6,
    "result": {
      "slot": 12345678,
      "hash": "blockHash",
      "timestamp": 1639876543
    }
  }
}

7. logsUnsubscribe

取消日志订阅。

示例请求：

{
  "jsonrpc": "2.0",
  "id": 2,
  "method": "logsUnsubscribe",
  "params": [1] // 订阅时返回的订阅 ID
}

示例响应：

{
  "jsonrpc": "2.0",
  "result": true
}

8. accountUnsubscribe

取消账户订阅。

示例请求：

{
  "jsonrpc": "2.0",
  "id": 2,
  "method": "accountUnsubscribe",
  "params": [2] // 订阅时返回的订阅 ID
}

示例响应：

{
  "jsonrpc": "2.0",
  "result": true
}

9. programUnsubscribe

取消程序订阅。

示例请求：

{
  "jsonrpc": "2.0",
  "id": 2,
  "method": "programUnsubscribe",
  "params": [3] // 订阅时返回的订阅 ID
}

示例响应：

{
  "jsonrpc": "2.0",
  "result": true
}

以上是 Solana WebSocket 提供的所有订阅方法及相关示例，适用于账户监控、程序变化和区块事件监听等场景。如果有其他具体需求，可以进一步探讨！
